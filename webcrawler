#!/usr/bin/python -u
import sys
from HTMLParser import HTMLParser
from get import get_login_page, post_login

ADDRESS = "http://fring.ccs.neu.edu/accounts/login/?next=/fakebook/"

LOGIN_PAGE_PATH = "/accounts/login/?next=/fakebook.html"


LOGIN_USERNAME = "id_username"
LOGIN_PASSWORD = "id_password"
MIDDLEWARE_TOKEN = None
USERNAME = "001196344"
PASSWORD = "7L3AD6ZH"

class MyHTMLParser(HTMLParser):
    def __init__(self):
        HTMLParser.__init__(self)
        self.recording = 0
        self.data = []

    def handle_starttag(self, tag, attrs):
        global MIDDLEWARE_TOKEN

        #print("Start tag:", tag)
        #for attr in attrs:
        #    print("     attr:", attr)

        if tag == "input":
            #print tag
            #print attrs
            for attr in attrs:
                if attr[0] == "name":
                    if attr[1] == "csrfmiddlewaretoken":
                        for attr in attrs:
                            if attr[0] == "value":
                                MIDDLEWARE_TOKEN = attr[1]
                                print MIDDLEWARE_TOKEN

                    #print attr

    """
    def handle_endtag(self, tag):
        print("End tag  :", tag)

    def handle_data(self, data):
        print("Data     :", data)

    def handle_comment(self, data):
        print("Comment  :", data)
    def handle_entityref(self, name):
        c = chr(name2codepoint[name])
        print("Named ent:", c)
    def handle_charref(self, name):
        if name.startswith('x'):
            c = chr(int(name[1:], 16))
        else:
            c = chr(int(name))
        print("Num ent  :", c)
    def handle_decl(self, data):
        print("Decl     :", data)

    """


def main():
    username = sys.argv[1]
    password = sys.argv[2]

    login(username, password)



def login(username, password):
    global ADDRESS
    global MIDDLEWARE_TOKEN

    #login_html = urllib2.urlopen(ADDRESS).read()
    login_html = get_login_page()
    print login_html

    parser = MyHTMLParser()

    # parse login_html for username
    parser.feed(login_html)

    print "USER: " + USERNAME
    print "PASSWORD " + PASSWORD
    print "TOKEN " + MIDDLEWARE_TOKEN

    print post_login(LOGIN_PAGE_PATH, USERNAME, PASSWORD, MIDDLEWARE_TOKEN)

    parser.close()

    #genPostReq(username, password, MIDDLEWARE_TOKEN)

'''
def genPostReq(username, password, mwtoken):
    # Using the username, password, and token generate and send
    # a POST request to the fakebook server.
    url = 'http://fring.ccs.neu.edu/accounts/login/?next=/fakebook/'
    values = {'username' : username,
              'password' : password,
              'next' : '/fakebook/',
              'csrfmiddlewaretoken' : mwtoken }

    try:
        data = urllib.urlencode(values)
        req = urllib2.Request(url, data)
        response = urllib2.urlopen(req)
        the_page = response.read()
        handle_http_errs(the_page)
        print the_page
    except:
        print "HTTP Error Code Returned"

'''
# Handles the http Response Code and decides the course of action
def handle_http_errs(http_err):
    print http_err


if __name__ == "__main__":
    main()
